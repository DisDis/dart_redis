// This file was generated by ./commands.js on 2014-04-23T22:21:02.354
part of dart_redis;

typedef void RedisCallback(err,[ res]);

abstract class _RedisClient{
send_command (String command, [List args, RedisCallback callback]);

 get(List args, [RedisCallback callback]) {
          return this.send_command("get", args, callback);
      }
      GET(List args, [RedisCallback callback])=>get(args, callback);
 set(List args, [RedisCallback callback]) {
          return this.send_command("set", args, callback);
      }
      SET(List args, [RedisCallback callback])=>set(args, callback);
 setnx(List args, [RedisCallback callback]) {
          return this.send_command("setnx", args, callback);
      }
      SETNX(List args, [RedisCallback callback])=>setnx(args, callback);
 setex(List args, [RedisCallback callback]) {
          return this.send_command("setex", args, callback);
      }
      SETEX(List args, [RedisCallback callback])=>setex(args, callback);
 append(List args, [RedisCallback callback]) {
          return this.send_command("append", args, callback);
      }
      APPEND(List args, [RedisCallback callback])=>append(args, callback);
 strlen(List args, [RedisCallback callback]) {
          return this.send_command("strlen", args, callback);
      }
      STRLEN(List args, [RedisCallback callback])=>strlen(args, callback);
 del(List args, [RedisCallback callback]) {
          return this.send_command("del", args, callback);
      }
      DEL(List args, [RedisCallback callback])=>del(args, callback);
 exists(List args, [RedisCallback callback]) {
          return this.send_command("exists", args, callback);
      }
      EXISTS(List args, [RedisCallback callback])=>exists(args, callback);
 setbit(List args, [RedisCallback callback]) {
          return this.send_command("setbit", args, callback);
      }
      SETBIT(List args, [RedisCallback callback])=>setbit(args, callback);
 getbit(List args, [RedisCallback callback]) {
          return this.send_command("getbit", args, callback);
      }
      GETBIT(List args, [RedisCallback callback])=>getbit(args, callback);
 setrange(List args, [RedisCallback callback]) {
          return this.send_command("setrange", args, callback);
      }
      SETRANGE(List args, [RedisCallback callback])=>setrange(args, callback);
 getrange(List args, [RedisCallback callback]) {
          return this.send_command("getrange", args, callback);
      }
      GETRANGE(List args, [RedisCallback callback])=>getrange(args, callback);
 substr(List args, [RedisCallback callback]) {
          return this.send_command("substr", args, callback);
      }
      SUBSTR(List args, [RedisCallback callback])=>substr(args, callback);
 incr(List args, [RedisCallback callback]) {
          return this.send_command("incr", args, callback);
      }
      INCR(List args, [RedisCallback callback])=>incr(args, callback);
 decr(List args, [RedisCallback callback]) {
          return this.send_command("decr", args, callback);
      }
      DECR(List args, [RedisCallback callback])=>decr(args, callback);
 mget(List args, [RedisCallback callback]) {
          return this.send_command("mget", args, callback);
      }
      MGET(List args, [RedisCallback callback])=>mget(args, callback);
 rpush(List args, [RedisCallback callback]) {
          return this.send_command("rpush", args, callback);
      }
      RPUSH(List args, [RedisCallback callback])=>rpush(args, callback);
 lpush(List args, [RedisCallback callback]) {
          return this.send_command("lpush", args, callback);
      }
      LPUSH(List args, [RedisCallback callback])=>lpush(args, callback);
 rpushx(List args, [RedisCallback callback]) {
          return this.send_command("rpushx", args, callback);
      }
      RPUSHX(List args, [RedisCallback callback])=>rpushx(args, callback);
 lpushx(List args, [RedisCallback callback]) {
          return this.send_command("lpushx", args, callback);
      }
      LPUSHX(List args, [RedisCallback callback])=>lpushx(args, callback);
 linsert(List args, [RedisCallback callback]) {
          return this.send_command("linsert", args, callback);
      }
      LINSERT(List args, [RedisCallback callback])=>linsert(args, callback);
 rpop(List args, [RedisCallback callback]) {
          return this.send_command("rpop", args, callback);
      }
      RPOP(List args, [RedisCallback callback])=>rpop(args, callback);
 lpop(List args, [RedisCallback callback]) {
          return this.send_command("lpop", args, callback);
      }
      LPOP(List args, [RedisCallback callback])=>lpop(args, callback);
 brpop(List args, [RedisCallback callback]) {
          return this.send_command("brpop", args, callback);
      }
      BRPOP(List args, [RedisCallback callback])=>brpop(args, callback);
 brpoplpush(List args, [RedisCallback callback]) {
          return this.send_command("brpoplpush", args, callback);
      }
      BRPOPLPUSH(List args, [RedisCallback callback])=>brpoplpush(args, callback);
 blpop(List args, [RedisCallback callback]) {
          return this.send_command("blpop", args, callback);
      }
      BLPOP(List args, [RedisCallback callback])=>blpop(args, callback);
 llen(List args, [RedisCallback callback]) {
          return this.send_command("llen", args, callback);
      }
      LLEN(List args, [RedisCallback callback])=>llen(args, callback);
 lindex(List args, [RedisCallback callback]) {
          return this.send_command("lindex", args, callback);
      }
      LINDEX(List args, [RedisCallback callback])=>lindex(args, callback);
 lset(List args, [RedisCallback callback]) {
          return this.send_command("lset", args, callback);
      }
      LSET(List args, [RedisCallback callback])=>lset(args, callback);
 lrange(List args, [RedisCallback callback]) {
          return this.send_command("lrange", args, callback);
      }
      LRANGE(List args, [RedisCallback callback])=>lrange(args, callback);
 ltrim(List args, [RedisCallback callback]) {
          return this.send_command("ltrim", args, callback);
      }
      LTRIM(List args, [RedisCallback callback])=>ltrim(args, callback);
 lrem(List args, [RedisCallback callback]) {
          return this.send_command("lrem", args, callback);
      }
      LREM(List args, [RedisCallback callback])=>lrem(args, callback);
 rpoplpush(List args, [RedisCallback callback]) {
          return this.send_command("rpoplpush", args, callback);
      }
      RPOPLPUSH(List args, [RedisCallback callback])=>rpoplpush(args, callback);
 sadd(List args, [RedisCallback callback]) {
          return this.send_command("sadd", args, callback);
      }
      SADD(List args, [RedisCallback callback])=>sadd(args, callback);
 srem(List args, [RedisCallback callback]) {
          return this.send_command("srem", args, callback);
      }
      SREM(List args, [RedisCallback callback])=>srem(args, callback);
 smove(List args, [RedisCallback callback]) {
          return this.send_command("smove", args, callback);
      }
      SMOVE(List args, [RedisCallback callback])=>smove(args, callback);
 sismember(List args, [RedisCallback callback]) {
          return this.send_command("sismember", args, callback);
      }
      SISMEMBER(List args, [RedisCallback callback])=>sismember(args, callback);
 scard(List args, [RedisCallback callback]) {
          return this.send_command("scard", args, callback);
      }
      SCARD(List args, [RedisCallback callback])=>scard(args, callback);
 spop(List args, [RedisCallback callback]) {
          return this.send_command("spop", args, callback);
      }
      SPOP(List args, [RedisCallback callback])=>spop(args, callback);
 srandmember(List args, [RedisCallback callback]) {
          return this.send_command("srandmember", args, callback);
      }
      SRANDMEMBER(List args, [RedisCallback callback])=>srandmember(args, callback);
 sinter(List args, [RedisCallback callback]) {
          return this.send_command("sinter", args, callback);
      }
      SINTER(List args, [RedisCallback callback])=>sinter(args, callback);
 sinterstore(List args, [RedisCallback callback]) {
          return this.send_command("sinterstore", args, callback);
      }
      SINTERSTORE(List args, [RedisCallback callback])=>sinterstore(args, callback);
 sunion(List args, [RedisCallback callback]) {
          return this.send_command("sunion", args, callback);
      }
      SUNION(List args, [RedisCallback callback])=>sunion(args, callback);
 sunionstore(List args, [RedisCallback callback]) {
          return this.send_command("sunionstore", args, callback);
      }
      SUNIONSTORE(List args, [RedisCallback callback])=>sunionstore(args, callback);
 sdiff(List args, [RedisCallback callback]) {
          return this.send_command("sdiff", args, callback);
      }
      SDIFF(List args, [RedisCallback callback])=>sdiff(args, callback);
 sdiffstore(List args, [RedisCallback callback]) {
          return this.send_command("sdiffstore", args, callback);
      }
      SDIFFSTORE(List args, [RedisCallback callback])=>sdiffstore(args, callback);
 smembers(List args, [RedisCallback callback]) {
          return this.send_command("smembers", args, callback);
      }
      SMEMBERS(List args, [RedisCallback callback])=>smembers(args, callback);
 zadd(List args, [RedisCallback callback]) {
          return this.send_command("zadd", args, callback);
      }
      ZADD(List args, [RedisCallback callback])=>zadd(args, callback);
 zincrby(List args, [RedisCallback callback]) {
          return this.send_command("zincrby", args, callback);
      }
      ZINCRBY(List args, [RedisCallback callback])=>zincrby(args, callback);
 zrem(List args, [RedisCallback callback]) {
          return this.send_command("zrem", args, callback);
      }
      ZREM(List args, [RedisCallback callback])=>zrem(args, callback);
 zremrangebyscore(List args, [RedisCallback callback]) {
          return this.send_command("zremrangebyscore", args, callback);
      }
      ZREMRANGEBYSCORE(List args, [RedisCallback callback])=>zremrangebyscore(args, callback);
 zremrangebyrank(List args, [RedisCallback callback]) {
          return this.send_command("zremrangebyrank", args, callback);
      }
      ZREMRANGEBYRANK(List args, [RedisCallback callback])=>zremrangebyrank(args, callback);
 zunionstore(List args, [RedisCallback callback]) {
          return this.send_command("zunionstore", args, callback);
      }
      ZUNIONSTORE(List args, [RedisCallback callback])=>zunionstore(args, callback);
 zinterstore(List args, [RedisCallback callback]) {
          return this.send_command("zinterstore", args, callback);
      }
      ZINTERSTORE(List args, [RedisCallback callback])=>zinterstore(args, callback);
 zrange(List args, [RedisCallback callback]) {
          return this.send_command("zrange", args, callback);
      }
      ZRANGE(List args, [RedisCallback callback])=>zrange(args, callback);
 zrangebyscore(List args, [RedisCallback callback]) {
          return this.send_command("zrangebyscore", args, callback);
      }
      ZRANGEBYSCORE(List args, [RedisCallback callback])=>zrangebyscore(args, callback);
 zrevrangebyscore(List args, [RedisCallback callback]) {
          return this.send_command("zrevrangebyscore", args, callback);
      }
      ZREVRANGEBYSCORE(List args, [RedisCallback callback])=>zrevrangebyscore(args, callback);
 zcount(List args, [RedisCallback callback]) {
          return this.send_command("zcount", args, callback);
      }
      ZCOUNT(List args, [RedisCallback callback])=>zcount(args, callback);
 zrevrange(List args, [RedisCallback callback]) {
          return this.send_command("zrevrange", args, callback);
      }
      ZREVRANGE(List args, [RedisCallback callback])=>zrevrange(args, callback);
 zcard(List args, [RedisCallback callback]) {
          return this.send_command("zcard", args, callback);
      }
      ZCARD(List args, [RedisCallback callback])=>zcard(args, callback);
 zscore(List args, [RedisCallback callback]) {
          return this.send_command("zscore", args, callback);
      }
      ZSCORE(List args, [RedisCallback callback])=>zscore(args, callback);
 zrank(List args, [RedisCallback callback]) {
          return this.send_command("zrank", args, callback);
      }
      ZRANK(List args, [RedisCallback callback])=>zrank(args, callback);
 zrevrank(List args, [RedisCallback callback]) {
          return this.send_command("zrevrank", args, callback);
      }
      ZREVRANK(List args, [RedisCallback callback])=>zrevrank(args, callback);
 hset(List args, [RedisCallback callback]) {
          return this.send_command("hset", args, callback);
      }
      HSET(List args, [RedisCallback callback])=>hset(args, callback);
 hsetnx(List args, [RedisCallback callback]) {
          return this.send_command("hsetnx", args, callback);
      }
      HSETNX(List args, [RedisCallback callback])=>hsetnx(args, callback);
 hget(List args, [RedisCallback callback]) {
          return this.send_command("hget", args, callback);
      }
      HGET(List args, [RedisCallback callback])=>hget(args, callback);
 hmset(List args, [RedisCallback callback]) {
          return this.send_command("hmset", args, callback);
      }
      HMSET(List args, [RedisCallback callback])=>hmset(args, callback);
 hmget(List args, [RedisCallback callback]) {
          return this.send_command("hmget", args, callback);
      }
      HMGET(List args, [RedisCallback callback])=>hmget(args, callback);
 hincrby(List args, [RedisCallback callback]) {
          return this.send_command("hincrby", args, callback);
      }
      HINCRBY(List args, [RedisCallback callback])=>hincrby(args, callback);
 hdel(List args, [RedisCallback callback]) {
          return this.send_command("hdel", args, callback);
      }
      HDEL(List args, [RedisCallback callback])=>hdel(args, callback);
 hlen(List args, [RedisCallback callback]) {
          return this.send_command("hlen", args, callback);
      }
      HLEN(List args, [RedisCallback callback])=>hlen(args, callback);
 hkeys(List args, [RedisCallback callback]) {
          return this.send_command("hkeys", args, callback);
      }
      HKEYS(List args, [RedisCallback callback])=>hkeys(args, callback);
 hvals(List args, [RedisCallback callback]) {
          return this.send_command("hvals", args, callback);
      }
      HVALS(List args, [RedisCallback callback])=>hvals(args, callback);
 hgetall(List args, [RedisCallback callback]) {
          return this.send_command("hgetall", args, callback);
      }
      HGETALL(List args, [RedisCallback callback])=>hgetall(args, callback);
 hexists(List args, [RedisCallback callback]) {
          return this.send_command("hexists", args, callback);
      }
      HEXISTS(List args, [RedisCallback callback])=>hexists(args, callback);
 incrby(List args, [RedisCallback callback]) {
          return this.send_command("incrby", args, callback);
      }
      INCRBY(List args, [RedisCallback callback])=>incrby(args, callback);
 decrby(List args, [RedisCallback callback]) {
          return this.send_command("decrby", args, callback);
      }
      DECRBY(List args, [RedisCallback callback])=>decrby(args, callback);
 getset(List args, [RedisCallback callback]) {
          return this.send_command("getset", args, callback);
      }
      GETSET(List args, [RedisCallback callback])=>getset(args, callback);
 mset(List args, [RedisCallback callback]) {
          return this.send_command("mset", args, callback);
      }
      MSET(List args, [RedisCallback callback])=>mset(args, callback);
 msetnx(List args, [RedisCallback callback]) {
          return this.send_command("msetnx", args, callback);
      }
      MSETNX(List args, [RedisCallback callback])=>msetnx(args, callback);
 randomkey(List args, [RedisCallback callback]) {
          return this.send_command("randomkey", args, callback);
      }
      RANDOMKEY(List args, [RedisCallback callback])=>randomkey(args, callback);
 select(List args, [RedisCallback callback]) {
          return this.send_command("select", args, callback);
      }
      SELECT(List args, [RedisCallback callback])=>select(args, callback);
 move(List args, [RedisCallback callback]) {
          return this.send_command("move", args, callback);
      }
      MOVE(List args, [RedisCallback callback])=>move(args, callback);
 rename(List args, [RedisCallback callback]) {
          return this.send_command("rename", args, callback);
      }
      RENAME(List args, [RedisCallback callback])=>rename(args, callback);
 renamenx(List args, [RedisCallback callback]) {
          return this.send_command("renamenx", args, callback);
      }
      RENAMENX(List args, [RedisCallback callback])=>renamenx(args, callback);
 expire(List args, [RedisCallback callback]) {
          return this.send_command("expire", args, callback);
      }
      EXPIRE(List args, [RedisCallback callback])=>expire(args, callback);
 expireat(List args, [RedisCallback callback]) {
          return this.send_command("expireat", args, callback);
      }
      EXPIREAT(List args, [RedisCallback callback])=>expireat(args, callback);
 keys(List args, [RedisCallback callback]) {
          return this.send_command("keys", args, callback);
      }
      KEYS(List args, [RedisCallback callback])=>keys(args, callback);
 dbsize(List args, [RedisCallback callback]) {
          return this.send_command("dbsize", args, callback);
      }
      DBSIZE(List args, [RedisCallback callback])=>dbsize(args, callback);
 auth(List args, [RedisCallback callback]) {
          return this.send_command("auth", args, callback);
      }
      AUTH(List args, [RedisCallback callback])=>auth(args, callback);
 ping(List args, [RedisCallback callback]) {
          return this.send_command("ping", args, callback);
      }
      PING(List args, [RedisCallback callback])=>ping(args, callback);
 echo(List args, [RedisCallback callback]) {
          return this.send_command("echo", args, callback);
      }
      ECHO(List args, [RedisCallback callback])=>echo(args, callback);
 save(List args, [RedisCallback callback]) {
          return this.send_command("save", args, callback);
      }
      SAVE(List args, [RedisCallback callback])=>save(args, callback);
 bgsave(List args, [RedisCallback callback]) {
          return this.send_command("bgsave", args, callback);
      }
      BGSAVE(List args, [RedisCallback callback])=>bgsave(args, callback);
 bgrewriteaof(List args, [RedisCallback callback]) {
          return this.send_command("bgrewriteaof", args, callback);
      }
      BGREWRITEAOF(List args, [RedisCallback callback])=>bgrewriteaof(args, callback);
 shutdown(List args, [RedisCallback callback]) {
          return this.send_command("shutdown", args, callback);
      }
      SHUTDOWN(List args, [RedisCallback callback])=>shutdown(args, callback);
 lastsave(List args, [RedisCallback callback]) {
          return this.send_command("lastsave", args, callback);
      }
      LASTSAVE(List args, [RedisCallback callback])=>lastsave(args, callback);
 type(List args, [RedisCallback callback]) {
          return this.send_command("type", args, callback);
      }
      TYPE(List args, [RedisCallback callback])=>type(args, callback);
 multi(List args, [RedisCallback callback]) {
          return this.send_command("multi", args, callback);
      }
      MULTI(List args, [RedisCallback callback])=>multi(args, callback);
 exec(List args, [RedisCallback callback]) {
          return this.send_command("exec", args, callback);
      }
      EXEC(List args, [RedisCallback callback])=>exec(args, callback);
 discard(List args, [RedisCallback callback]) {
          return this.send_command("discard", args, callback);
      }
      DISCARD(List args, [RedisCallback callback])=>discard(args, callback);
 sync(List args, [RedisCallback callback]) {
          return this.send_command("sync", args, callback);
      }
      SYNC(List args, [RedisCallback callback])=>sync(args, callback);
 flushdb(List args, [RedisCallback callback]) {
          return this.send_command("flushdb", args, callback);
      }
      FLUSHDB(List args, [RedisCallback callback])=>flushdb(args, callback);
 flushall(List args, [RedisCallback callback]) {
          return this.send_command("flushall", args, callback);
      }
      FLUSHALL(List args, [RedisCallback callback])=>flushall(args, callback);
 sort(List args, [RedisCallback callback]) {
          return this.send_command("sort", args, callback);
      }
      SORT(List args, [RedisCallback callback])=>sort(args, callback);
 info(List args, [RedisCallback callback]) {
          return this.send_command("info", args, callback);
      }
      INFO(List args, [RedisCallback callback])=>info(args, callback);
 monitor(List args, [RedisCallback callback]) {
          return this.send_command("monitor", args, callback);
      }
      MONITOR(List args, [RedisCallback callback])=>monitor(args, callback);
 ttl(List args, [RedisCallback callback]) {
          return this.send_command("ttl", args, callback);
      }
      TTL(List args, [RedisCallback callback])=>ttl(args, callback);
 persist(List args, [RedisCallback callback]) {
          return this.send_command("persist", args, callback);
      }
      PERSIST(List args, [RedisCallback callback])=>persist(args, callback);
 slaveof(List args, [RedisCallback callback]) {
          return this.send_command("slaveof", args, callback);
      }
      SLAVEOF(List args, [RedisCallback callback])=>slaveof(args, callback);
 debug(List args, [RedisCallback callback]) {
          return this.send_command("debug", args, callback);
      }
      DEBUG(List args, [RedisCallback callback])=>debug(args, callback);
 config(List args, [RedisCallback callback]) {
          return this.send_command("config", args, callback);
      }
      CONFIG(List args, [RedisCallback callback])=>config(args, callback);
 subscribe(List args, [RedisCallback callback]) {
          return this.send_command("subscribe", args, callback);
      }
      SUBSCRIBE(List args, [RedisCallback callback])=>subscribe(args, callback);
 unsubscribe(List args, [RedisCallback callback]) {
          return this.send_command("unsubscribe", args, callback);
      }
      UNSUBSCRIBE(List args, [RedisCallback callback])=>unsubscribe(args, callback);
 psubscribe(List args, [RedisCallback callback]) {
          return this.send_command("psubscribe", args, callback);
      }
      PSUBSCRIBE(List args, [RedisCallback callback])=>psubscribe(args, callback);
 punsubscribe(List args, [RedisCallback callback]) {
          return this.send_command("punsubscribe", args, callback);
      }
      PUNSUBSCRIBE(List args, [RedisCallback callback])=>punsubscribe(args, callback);
 publish(List args, [RedisCallback callback]) {
          return this.send_command("publish", args, callback);
      }
      PUBLISH(List args, [RedisCallback callback])=>publish(args, callback);
 watch(List args, [RedisCallback callback]) {
          return this.send_command("watch", args, callback);
      }
      WATCH(List args, [RedisCallback callback])=>watch(args, callback);
 unwatch(List args, [RedisCallback callback]) {
          return this.send_command("unwatch", args, callback);
      }
      UNWATCH(List args, [RedisCallback callback])=>unwatch(args, callback);
 cluster(List args, [RedisCallback callback]) {
          return this.send_command("cluster", args, callback);
      }
      CLUSTER(List args, [RedisCallback callback])=>cluster(args, callback);
 restore(List args, [RedisCallback callback]) {
          return this.send_command("restore", args, callback);
      }
      RESTORE(List args, [RedisCallback callback])=>restore(args, callback);
 migrate(List args, [RedisCallback callback]) {
          return this.send_command("migrate", args, callback);
      }
      MIGRATE(List args, [RedisCallback callback])=>migrate(args, callback);
 dump(List args, [RedisCallback callback]) {
          return this.send_command("dump", args, callback);
      }
      DUMP(List args, [RedisCallback callback])=>dump(args, callback);
 object(List args, [RedisCallback callback]) {
          return this.send_command("object", args, callback);
      }
      OBJECT(List args, [RedisCallback callback])=>object(args, callback);
 client(List args, [RedisCallback callback]) {
          return this.send_command("client", args, callback);
      }
      CLIENT(List args, [RedisCallback callback])=>client(args, callback);
 eval(List args, [RedisCallback callback]) {
          return this.send_command("eval", args, callback);
      }
      EVAL(List args, [RedisCallback callback])=>eval(args, callback);
 evalsha(List args, [RedisCallback callback]) {
          return this.send_command("evalsha", args, callback);
      }
      EVALSHA(List args, [RedisCallback callback])=>evalsha(args, callback);
 bitcount(List args, [RedisCallback callback]) {
          return this.send_command("bitcount", args, callback);
      }
      BITCOUNT(List args, [RedisCallback callback])=>bitcount(args, callback);
 bitop(List args, [RedisCallback callback]) {
          return this.send_command("bitop", args, callback);
      }
      BITOP(List args, [RedisCallback callback])=>bitop(args, callback);
 hincrbyfloat(List args, [RedisCallback callback]) {
          return this.send_command("hincrbyfloat", args, callback);
      }
      HINCRBYFLOAT(List args, [RedisCallback callback])=>hincrbyfloat(args, callback);
 incrbyfloat(List args, [RedisCallback callback]) {
          return this.send_command("incrbyfloat", args, callback);
      }
      INCRBYFLOAT(List args, [RedisCallback callback])=>incrbyfloat(args, callback);
 pexpire(List args, [RedisCallback callback]) {
          return this.send_command("pexpire", args, callback);
      }
      PEXPIRE(List args, [RedisCallback callback])=>pexpire(args, callback);
 pexpireat(List args, [RedisCallback callback]) {
          return this.send_command("pexpireat", args, callback);
      }
      PEXPIREAT(List args, [RedisCallback callback])=>pexpireat(args, callback);
 psetex(List args, [RedisCallback callback]) {
          return this.send_command("psetex", args, callback);
      }
      PSETEX(List args, [RedisCallback callback])=>psetex(args, callback);
 pubsub(List args, [RedisCallback callback]) {
          return this.send_command("pubsub", args, callback);
      }
      PUBSUB(List args, [RedisCallback callback])=>pubsub(args, callback);
 pttl(List args, [RedisCallback callback]) {
          return this.send_command("pttl", args, callback);
      }
      PTTL(List args, [RedisCallback callback])=>pttl(args, callback);
 quit(List args, [RedisCallback callback]) {
          return this.send_command("quit", args, callback);
      }
      QUIT(List args, [RedisCallback callback])=>quit(args, callback);
 script(List args, [RedisCallback callback]) {
          return this.send_command("script", args, callback);
      }
      SCRIPT(List args, [RedisCallback callback])=>script(args, callback);
 slowlog(List args, [RedisCallback callback]) {
          return this.send_command("slowlog", args, callback);
      }
      SLOWLOG(List args, [RedisCallback callback])=>slowlog(args, callback);
 time(List args, [RedisCallback callback]) {
          return this.send_command("time", args, callback);
      }
      TIME(List args, [RedisCallback callback])=>time(args, callback);
 scan(List args, [RedisCallback callback]) {
          return this.send_command("scan", args, callback);
      }
      SCAN(List args, [RedisCallback callback])=>scan(args, callback);
 sscan(List args, [RedisCallback callback]) {
          return this.send_command("sscan", args, callback);
      }
      SSCAN(List args, [RedisCallback callback])=>sscan(args, callback);
 hscan(List args, [RedisCallback callback]) {
          return this.send_command("hscan", args, callback);
      }
      HSCAN(List args, [RedisCallback callback])=>hscan(args, callback);
 zscan(List args, [RedisCallback callback]) {
          return this.send_command("zscan", args, callback);
      }
      ZSCAN(List args, [RedisCallback callback])=>zscan(args, callback);
}
